<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="Sample">

	<typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias  alias="searchVO" type="egovframework.example.sample.service.SampleDefaultVO"/>
	<typeAlias  alias="actorVO" type="movreview.service.ActorVO"/>
	<typeAlias  alias="collectionVO" type="movreview.service.CollectionVO"/>
	<typeAlias  alias="loginVO" type="movreview.service.LoginVO"/>
	<typeAlias  alias="movieVO" type="movreview.service.MovieVO"/>
	
	<resultMap id="sample" class="egovframework.example.sample.service.SampleVO">
		<result property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="description" column="description"/>
		<result property="useYn" column="use_yn"/>
		<result property="regUser" column="reg_user"/>
	</resultMap>

	<insert id="sampleDAO.insertSample">
		<![CDATA[
			INSERT INTO SAMPLE 
				( ID
				  , NAME
				  , DESCRIPTION
				  , USE_YN
				  , REG_USER )
			VALUES ( #id#
				  , #name#
				  , #description#
				  , #useYn#
				  , #regUser# )
		]]>
	</insert>
	
	<update id="sampleDAO.updateSample">
		<![CDATA[
			UPDATE SAMPLE
			SET ID=#id#
				, NAME=#name#
				, DESCRIPTION=#description#
				, USE_YN=#useYn#
			WHERE ID=#id#
		]]>
	</update>
	
	<delete id="sampleDAO.deleteSample">
		<![CDATA[
			DELETE FROM SAMPLE 
			WHERE ID=#id#
		]]>
	</delete>
    
    <select id="sampleDAO.selectSample" resultMap="sample">
        <![CDATA[
            SELECT
                ID, NAME, DESCRIPTION, USE_YN, REG_USER
            FROM SAMPLE 
            WHERE ID=#id#
        ]]>
    </select>
	
	<select id="sampleDAO.selectSampleList" parameterClass="searchVO" resultClass="egovMap">

			SELECT
				ID, NAME, DESCRIPTION, USE_YN, REG_USER
			FROM SAMPLE
			WHERE 1=1
			<isEqual prepend="AND" property="searchCondition" compareValue="0">
				ID LIKE '%' || #searchKeyword# || '%'
			</isEqual>
			<isEqual prepend="AND" property="searchCondition" compareValue="1">
				NAME LIKE '%' || #searchKeyword# || '%'
			</isEqual>
			ORDER BY ID DESC
			LIMIT #recordCountPerPage# OFFSET #firstIndex#		
	</select>
	
	<select id="sampleDAO.selectSampleListTotCnt" parameterClass="searchVO" resultClass="int">

			SELECT COUNT(*) totcnt
			FROM SAMPLE
			WHERE 1=1
			<isEqual prepend="AND" property="searchCondition" compareValue="0">
				ID LIKE '%' || #searchKeyword# || '%'
			</isEqual>
			<isEqual prepend="AND" property="searchCondition" compareValue="1">
				NAME LIKE '%' || #searchKeyword# || '%'
			</isEqual>
	</select>
	
	<!-- MAIN -->
	<!-- 최근 등록 영화 -->
	<select id="movDAO.recentlyAdded" resultClass="movieVO">
		<![CDATA[
			SELECT movie_id AS movieId
					, title_kr AS titleKr
					, title_er AS titleEn
					, backdrop_path AS backdropPath
					, poster_path AS posterPath
					, collection_id AS collectionId
					, genre AS genreDB
					, submit_date
			FROM movie_page
			ORDER BY submit_date DESC
			LIMIT 10
		]]>
	</select>
	<!-- 최근 등록 시리즈 -->
	<select id="movDAO.recentlyCollected" resultClass="collectionVO">
		<![CDATA[
			SELECT id
					, cname AS name
					, poster_path AS posterPath
					, backdrop_path AS backdropPath
					, overview
					, submit_date
			FROM collection
			ORDER BY submit_date DESC
			LIMIT 10
		]]>
	</select>
	
	<!-- SEARCH -->
	<!-- 영화 검색 -->
	<select id="movDAO.searchMovie" resultClass="movieVO">
	    <![CDATA[
	        SELECT movie_id AS movieId, title_kr AS titleKr, title_er AS titleEr, backdrop_path AS backdropPath, poster_path AS posterPath, collection_id AS collectionId, genre AS genreDB
	        FROM movie_page
	        WHERE (title_kr ILIKE '%' || #titleEn# || '%' OR title_er ILIKE '%' || #titleEn# || '%')
	    ]]>
	</select>

	<!-- 등록 -->
	<!-- 영화 삽입 -->
	<insert id="movDAO.insertMovie" parameterClass="movieVO">
		<![CDATA[
			INSERT INTO movie_page( movie_id
									, title_kr
									, title_er
									, genre
									, release_date
									, overview
									, backdrop_path
									, poster_path
									, collection_id
									, status
									, tagline
									, submit_date )
			VALUES ( #movieId#
					, #titleKr#
					, #titleEn#
					, #genreDB#
					, #releaseDate#
					, #overview#
					, #backdropPath#
					, #posterPath#
					, #collectionId#
					, #status#
					, #tagline#
					, CURRENT_TIMESTAMP )
					
		]]>
	</insert>
	<!-- 시리즈 삽입 -->
	<insert id="movDAO.insertCollection" parameterClass="collectionVO">
		<![CDATA[
			INSERT INTO collection( id
									, cname
									, poster_path
									, backdrop_path
									, overview
									, submit_date )
			VALUES ( #id#
					, #name#
					, #posterPath#
					, #backdropPath#
					, #overview#
					, CURRENT_TIMESTAMP )
		]]>
	</insert>
	<!-- 연기자 삽입 -->
	<insert id="movDAO.insertActor" parameterClass="actorVO">
		<![CDATA[
			INSERT INTO actor( actor_id
									, act_name
									, profile_path )
			VALUES ( #actorId#
					, #actName#
					, #profilePath# )
		]]>
	</insert>
	<!-- 시리즈 중복 확인 -->
	<select id="movDAO.checkCollection" resultClass="collectionVO">
		<![CDATA[
			SELECT id
					, cname AS name
					, poster_path AS posterPath
					, backdrop_path AS backdropPath
					, overview
			FROM collection
			WHERE id = #id#
		]]>
	</select>
	<!-- 배우 중복 확인 -->
	<select id="movDAO.checkActor" resultClass="actorVO">
		<![CDATA[
			SELECT actor_id AS actorId
					, act_name AS actorName
					, profile_path AS profilePath
			FROM actor
			WHERE actor_id = #actorId#
		]]>
	</select>
	
	<!-- 상세페이지 -->
	<!-- 영화 정보 불러오기 -->
	<select id="movDAO.selectMovie" resultClass="movieVO">
	    <![CDATA[
	        SELECT movie_id AS movieId
	        		, title_kr AS titleKr
	        		, title_er AS titleEn
	        		, backdrop_path AS backdropPath
	        		, poster_path AS posterPath
	        		, collection_id AS collectionId
	        		, genre AS genreDB
	        		, overview
	        		, release_date AS releaseDate
	        		, tagline
	        FROM movie_page
	        WHERE movie_id = #movieId#
	    ]]>
	</select>
	<!-- 시리즈 정보 불러오기 -->
	<select id="movDAO.selectCollection" resultClass="collectionVO">
		<![CDATA[
			SELECT id
					, cname AS name
					, poster_path AS posterPath
					, backdrop_path AS backdropPath
					, overview
			FROM collection
			WHERE id = #id#
		]]>
	</select>
	<!-- 시리즈 소속 영화 불러오기 -->
	<select id="movDAO.collectionMovie" resultClass="movieVO">
	    <![CDATA[
	        SELECT movie_id AS movieId
	        		, title_kr AS titleKr
	        		, title_er AS titleEn
	        		, backdrop_path AS backdropPath
	        		, poster_path AS posterPath
	        		, collection_id AS collectionId
	        		, genre AS genreDB
	        		, overview
	        		, release_date AS releaseDate
	        		, tagline
	        FROM movie_page
	        WHERE movie_id = #collectionId#
	    ]]>
	</select>
	
</sqlMap>
